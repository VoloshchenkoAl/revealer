{"version":3,"file":"revealer.js","sources":["../src/helpers.ts","../src/index.ts"],"sourcesContent":["/* @Types */\nimport { Position } from './types';\n\nconst getElementCenterPosition = (elementSelector: string): Position => {\n  const element = document.querySelector(elementSelector);\n\n  if (!element) {\n    throw new Error(`Element with selector ${elementSelector} have not been founded`);\n  }\n\n  const calculateCenter = (a0: number, a1: number): number => (a1 - a0) / 2;\n\n  const { x: elementX, y: elementY, bottom, right, left, top } = element.getBoundingClientRect();\n\n  return {\n    x: `${left + calculateCenter(elementX, right)}px`,\n    y: `${top + calculateCenter(elementY, bottom)}px`,\n  };\n};\n\nexport const getCircleCenterPosition = (\n  revealerSelector: string,\n  anchorSelector?: string,\n  position?: Position,\n): Position => {\n  if (typeof anchorSelector === 'string') {\n    return getElementCenterPosition(anchorSelector);\n  }\n\n  if (typeof position?.x === 'string' && typeof position?.y === 'string') {\n    return position;\n  }\n\n  return getElementCenterPosition(revealerSelector);\n};\n\nexport const getRevealRadius = (revealerSelector: string): number => {\n  let { innerHeight, innerWidth } = window;\n\n  if (typeof revealerSelector === 'string') {\n    const revealerBlock = document.querySelector(revealerSelector);\n    const { width: elementWidth, height: elementHeight } = revealerBlock.getBoundingClientRect();\n\n    innerHeight = elementHeight;\n    innerWidth = elementWidth;\n  }\n\n  return Math.sqrt(innerHeight ** 2 + innerWidth ** 2);\n};\n","/* @Types */\nimport { Revealer, RevealerParam, Position } from './types';\n\n/* @Helpers */\nimport { getCircleCenterPosition, getRevealRadius } from './helpers';\n\nfunction revealer(revealerOptions: RevealerParam): Revealer {\n  const { revealElementSelector, options } = revealerOptions;\n  const revealBlock = document.querySelector(revealElementSelector) as HTMLElement;\n  const initialRadius = 0;\n\n  let isReveal = false;\n  let reqId: number = null;\n  let targetRadius: number = initialRadius;\n  let elementRadius: number = targetRadius;\n  let revealPosition: Position = getCircleCenterPosition(\n    revealElementSelector,\n    options?.anchorSelector,\n    options?.position,\n  );\n\n  const setCircleClipPath = (): void => {\n    revealBlock.style.clipPath = `circle(${elementRadius}px at ${revealPosition.x} ${revealPosition.y})`;\n  };\n\n  const updateElementRadius = (): void => {\n    elementRadius += (targetRadius - elementRadius) * 0.08;\n  };\n\n  const cancelAnimation = (): void => {\n    cancelAnimationFrame(reqId);\n    reqId = null;\n  };\n\n  const animationStop = (): void => {\n    elementRadius = targetRadius;\n    setCircleClipPath();\n    cancelAnimation();\n  };\n\n  const initRevealBlock = (): void => {\n    setCircleClipPath();\n    revealBlock.setAttribute('data-active', 'true');\n  };\n\n  const revealAnimation = () => {\n    updateElementRadius();\n    const isStopAnimation: boolean = elementRadius - targetRadius > -2;\n\n    if (!isReveal) {\n      cancelAnimation();\n    }\n\n    if (isStopAnimation) {\n      animationStop();\n      return;\n    }\n\n    setCircleClipPath();\n    reqId = requestAnimationFrame(revealAnimation);\n  };\n\n  const hideAnimation = () => {\n    updateElementRadius();\n    const isStopAnimation: boolean = Math.abs(elementRadius - targetRadius) < 2;\n\n    if (isReveal) {\n      cancelAnimation();\n    }\n\n    if (isStopAnimation) {\n      animationStop();\n      return;\n    }\n\n    setCircleClipPath();\n    reqId = requestAnimationFrame(hideAnimation);\n  };\n\n  const isRevealed = () => isReveal;\n\n  const reveal = () => {\n    if (isReveal) {\n      return;\n    }\n\n    revealPosition = getCircleCenterPosition(\n      revealElementSelector,\n      options?.anchorSelector,\n      options?.position,\n    );\n    targetRadius = getRevealRadius(revealElementSelector);\n    revealAnimation();\n    isReveal = true;\n  };\n\n  const hide = () => {\n    if (!isReveal) {\n      return;\n    }\n\n    targetRadius = initialRadius;\n    hideAnimation();\n    isReveal = false;\n  };\n\n  initRevealBlock();\n\n  return {\n    isRevealed,\n    reveal,\n    hide,\n  };\n}\n\nexport default revealer;\n"],"names":[],"mappings":"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"}